- name: Ensure the etcd directories exist
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    owner: 'root'
    group: 'root'
    mode: '0750'
  loop:
    - /etc/kubernetes/pki/etcd
- name: Generate etcd server private key
  community.crypto.openssl_privatekey:
    path: /etc/kubernetes/pki/etcd/kube-apiserver.key
    type: "{{ etcd_privatekey_type }}"
- name: Generate kube-apiserver server CSR
  community.crypto.openssl_csr:
    common_name: kube-apiserver
    extKeyUsage_critical: false
    extended_key_usage:
      - clientAuth
    path: /etc/kubernetes/pki/etcd/kube-apiserver.csr
    privatekey_path: /etc/kubernetes/pki/etcd/kube-apiserver.key
    subject_alt_name:
      - DNS:localhost
      - DNS:{{ etcd_peer_name }}
      - DNS:{{ inventory_hostname }}
      - IP:127.0.0.1
      - IP:{{ ansible_facts.all_ipv4_addresses[-1] }}
      - IP:{{ ansible_facts.all_ipv6_addresses[-1] }}
- name: Generate kube-apiserver certificate
  community.crypto.x509_certificate:
    path: /etc/kubernetes/pki/etcd/kube-apiserver.crt
    csr_path: /etc/kubernetes/pki/etcd/kube-apiserver.csr
    privatekey_path: /etc/kubernetes/pki/etcd/kube-apiserver.key
    provider: ownca
    state: present
    ownca_path: /vagrant/share/etcd-ca.crt
    ownca_privatekey_path: /vagrant/share/etcd-ca.key
    ownca_not_after: +365d
  retries: 120
  delay: 5
  register: cert
  until: cert is succeeded
- name: Copy certs to /vagrant/share/
  ansible.builtin.copy:
    src: /etc/kubernetes/pki/etcd/{{ item }}
    dest: /vagrant/share/etcd-{{ inventory_hostname }}-{{ item }}
    remote_src: true
    mode: '0400'
  loop:
    - kube-apiserver.key
    - kube-apiserver.crt
